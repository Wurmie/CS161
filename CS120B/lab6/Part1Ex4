/*
 * wlee030_lab6_part4.c
 *
 * Created: 2/16/2015 8:29:05 PM
 *  Author: wurmie
 */
 
#include <avr/io.h>
 
void ADC_init() {
    ADCSRA |= (1 << ADEN) | (1 << ADSC) | (1 << ADATE);
    // ADEN: setting this bit enables analog-to-digital conversion.
    // ADSC: setting this bit starts the first conversion.
    // ADATE: setting this bit enables auto-triggering. Since we are
    //        in Free Running Mode, a new conversion will trigger whenever
    //        the previous conversion completes.
}

int main(void)
{
    DDRA = 0x00; PORTA = 0xFF; // input A
    DDRB = 0xFF; PORTB = 0x00; // output B
    DDRD = 0xFF; PORTD = 0x00; // output D
    
   unsigned short copy = 0x00;     // copy of ADC
   unsigned char adc = 0x00;     // convert ADC to char
   unsigned char tmp = 0x00;     // shift ADC
 
   unsigned short MAX = 0x3FF;
   unsigned short LIGHT1 = MAX*14/16;
   unsigned short LIGHT2 = MAX*13/16;
   unsigned short LIGHT3 = MAX*12/16;
   unsigned short LIGHT4 = MAX*11/16;
   unsigned short LIGHT5 = MAX*10/16;
   unsigned short LIGHT6 = MAX*9/16;
   unsigned short LIGHT7 = MAX*8/16;
   unsigned short LIGHT8 = MAX*7/16;

    ADC_init();
     
    while(1)
    {
        copy = ADC;
        adc = 0x00;

        if((copy <= LIGHT8))
            adc = 0xFF;
        if(((copy > LIGHT8) && (copy <= LIGHT7)))
            adc = 0x7F;
        if(((copy > LIGHT7) && (copy <= LIGHT6)))
            adc = 0x3F;
        if(((copy > LIGHT6) && (copy <= LIGHT5)))
            adc = 0x1F;
        if(((copy > LIGHT5) && (copy <= LIGHT4)))
            adc = 0x0F;
        if(((copy > LIGHT4) && (copy <= LIGHT3)))
            adc = 0x07;
        if(((copy > LIGHT3) && (copy <= LIGHT2)))
            adc = 0x03;
        if(((copy > LIGHT2) && (copy <= LIGHT1)))
            adc = 0x01;
 
        PORTB = adc;
        PORTD = tmp;
    }
}
